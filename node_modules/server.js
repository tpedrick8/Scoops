const express = require('express');
const axios = require('axios');
const dotenv = require('dotenv');
dotenv.config();

const app = express();
app.use(express.json());

// Serve static files from the "public" directory
app.use(express.static('public'));

const PORT = process.env.PORT || 3000;

// Authenticate and obtain token
async function authenticate() {
  try {
    const response = await axios.post(`${process.env.API_BASE_URL}/auth/login`, {
      username: process.env.API_USERNAME,
      password: process.env.API_PASSWORD,
    });
    return response.data.token;
  } catch (error) {
    console.error('Error authenticating:', error);
    throw new Error('Authentication failed');
  }
}

// Endpoint to get a report
app.get('/api/report', async (req, res) => {
  try {
    const token = await authenticate();
    const reportResponse = await axios.get(`${process.env.API_BASE_URL}/reports/YOUR_REPORT_ENDPOINT`, {
      headers: {
        Authorization: `Bearer ${token}`,
        'Content-Type': 'application/json',
      },
      params: {
        reportId: 'YOUR_REPORT_ID',
        format: 'json',
      },
    });
    res.json(reportResponse.data);
  } catch (error) {
    console.error('Error fetching report:', error);
    res.status(500).send('Error fetching report');
  }
});

// Start the server
app.listen(PORT, () => {
  console.log(`Server running on http://localhost:${PORT}`);
});
